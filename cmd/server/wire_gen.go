// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/learn-microservice-with-go/user_microservice/internal/config"
	"github.com/learn-microservice-with-go/user_microservice/internal/grpc"
	"github.com/learn-microservice-with-go/user_microservice/internal/mongo"
	"github.com/learn-microservice-with-go/user_microservice/internal/mysql"
	"github.com/learn-microservice-with-go/user_microservice/internal/redis"
)

// Injectors from wire.go:

func InitializeApp() (*App, error) {
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, err
	}
	db, err := mysql.NewMySQL(configConfig)
	if err != nil {
		return nil, err
	}
	client, err := mongo.NewMongo(configConfig)
	if err != nil {
		return nil, err
	}
	redisClient, err := redis.NewRedis(configConfig)
	if err != nil {
		return nil, err
	}
	server, err := grpc.NewGrpc(db, client, redisClient)
	if err != nil {
		return nil, err
	}
	app := NewApp(configConfig, db, client, redisClient, server)
	return app, nil
}
